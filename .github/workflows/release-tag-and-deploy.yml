name: Release Tag & Deploy to Cloud Run

on:
  push:
    branches:
      - master

jobs:
  create-release-tag:
    runs-on: ubuntu-latest
    name: Create Release Tag from Branch
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect tag version from release branch or commit message, or increment last tag
        id: version
        run: |
          branch=$(git branch -r --sort=-committerdate | grep -E 'origin/release[/-]v?([0-9]+\.[0-9]+\.[0-9]+)' | head -n1 | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          if [ -n "$branch" ]; then
            tag="v$branch"
            echo "Detected version from remote release branch: $tag"
          else
            merge_version=$(git log -1 --pretty=%B | grep -oE 'release[/-]v?([0-9]+\.[0-9]+\.[0-9]+)' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
            if [ -n "$merge_version" ]; then
              tag="v$merge_version"
              echo "Detected version from merge commit message: $tag"
            else
              last_tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
              IFS='.' read -r v1 v2 v3 <<< "${last_tag#v}"
              tag="v$((v1)).$((v2)).$((v3+1))"
              echo "No release branch or commit message detected, incrementing patch to: $tag"
            fi
          fi
          echo "TAG=$tag" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $TAG
          git push origin $TAG

      - name: Wait for Tag push
        run: sleep 5

  build-and-deploy-with-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: pasa-eventos

      - name: Build Docker image (Artifact Registry)
        run: |
          gcloud builds submit --tag us-central1-docker.pkg.dev/pasa-eventos/pasaeventos-backend/api:${GITHUB_REF_NAME}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy pasaeventos-api \
            --image us-central1-docker.pkg.dev/pasa-eventos/pasaeventos-backend/api:${GITHUB_REF_NAME} \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --memory=2Gi
